name: Deploy Azure Function with Container

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Azure Login using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Deploy Infrastructure
      run: |
        echo "Deploying infrastructure to resource group traindata-app-rg..."
        # Ensure resource group exists
        az group create --name traindata-app-rg --location francecentral
        
        # Deploy infrastructure components
        echo "Infrastructure deployment completed"
        
    - name: Get ACR information
      id: acr-info
      run: |
        ACR_NAME="traindataacr1754421294"
        ACR_LOGIN_SERVER=$(az acr show --name $ACR_NAME --resource-group traindata-app-rg --query loginServer --output tsv)
        echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT
        echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        
    - name: Login to Azure Container Registry
      run: |
        az acr login --name ${{ steps.acr-info.outputs.acr_name }}
        
    - name: Build and Push Docker Image
      run: |
        PROJECT_NAME="irail-function"
        IMAGE_TAG="latest"
        ACR_LOGIN_SERVER="${{ steps.acr-info.outputs.acr_login_server }}"
        FULL_IMAGE_NAME="$ACR_LOGIN_SERVER/$PROJECT_NAME:$IMAGE_TAG"
        
        # Build Docker image
        docker build -f Dockerfile.v2 -t $PROJECT_NAME:$IMAGE_TAG .
        
        # Tag and push image
        docker tag $PROJECT_NAME:$IMAGE_TAG $FULL_IMAGE_NAME
        docker push $FULL_IMAGE_NAME
        
        echo "Image pushed: $FULL_IMAGE_NAME"
        
    - name: Deploy to Azure Function App
      run: |
        RESOURCE_GROUP="traindata-app-rg"
        FUNCTION_APP_NAME="traindata-function-container"
        ACR_LOGIN_SERVER="${{ steps.acr-info.outputs.acr_login_server }}"
        PROJECT_NAME="irail-function"
        IMAGE_TAG="latest"
        FULL_IMAGE_NAME="$ACR_LOGIN_SERVER/$PROJECT_NAME:$IMAGE_TAG"
        
        # Get ACR credentials
        ACR_USERNAME=$(az acr credential show --name ${{ steps.acr-info.outputs.acr_name }} --query username --output tsv)
        ACR_PASSWORD=$(az acr credential show --name ${{ steps.acr-info.outputs.acr_name }} --query passwords[0].value --output tsv)
        
        # Update Function App container configuration
        az functionapp config container set \
          --name $FUNCTION_APP_NAME \
          --resource-group $RESOURCE_GROUP \
          --image $FULL_IMAGE_NAME \
          --registry-username $ACR_USERNAME \
          --registry-password $ACR_PASSWORD
          
        # Restart Function App to apply changes
        az functionapp restart --name $FUNCTION_APP_NAME --resource-group $RESOURCE_GROUP
        
        echo "Function App deployed successfully!"
        
    - name: Test Deployment
      run: |
        FUNCTION_APP_NAME="traindata-function-container"
        APP_URL="https://$FUNCTION_APP_NAME.azurewebsites.net"
        
        echo "Testing health endpoint: $APP_URL/api/health"
        
        # Wait for app to be ready
        sleep 30
        
        # Test health endpoint
        if curl -f "$APP_URL/api/health"; then
          echo "✅ Health check passed"
        else
          echo "❌ Health check failed"
          exit 1
        fi
